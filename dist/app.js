// Generated by Haxe 4.3.7
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() { };
Main.main = function() {
	ReactDOM.render(React.createElement(App,null),window.document.getElementById("app"));
};
var App = function(props,context) {
	React.Component.call(this,props,context);
};
App.__super__ = React.Component;
App.prototype = $extend(React.Component.prototype,{
	render: function() {
		return React.createElement("div",null,[React.createElement(components_Hero,{ key : "hero"}),React.createElement(components_About,{ key : "about"}),React.createElement(components_Features,{ key : "features"}),React.createElement(components_Showcase,{ key : "showcase"}),React.createElement(components_Community,{ key : "community"}),React.createElement(components_Footer,{ key : "footer"})]);
	}
});
var components_About = function(props,context) {
	React.Component.call(this,props,context);
};
components_About.__super__ = React.Component;
components_About.prototype = $extend(React.Component.prototype,{
	render: function() {
		var tmp = React.createElement("h2",null,"About Twisted Brain");
		var tmp1 = React.createElement("p",null,"We are developers shaping the future with Haxe and AI.");
		var tmp2 = React.createElement("p",null,"AI-assisted development for multi-target Haxe projects, human–AI collaboration in DevOps cycles (code → test → validate → deploy), focusing on simplicity, automation, and creativity.");
		var tmp3 = React.createElement("img",{ src : "assets/tb.png", alt : "Twisted Brain Logo", style : { width : "150px"}});
		return React.createElement("section",{ id : "about", className : "section"},[tmp,tmp1,tmp2,tmp3]);
	}
});
var components_Community = function(props,context) {
	React.Component.call(this,props,context);
};
components_Community.__super__ = React.Component;
components_Community.prototype = $extend(React.Component.prototype,{
	render: function() {
		var tmp = React.createElement("h2",null,"Community & Open Source");
		var tmp1 = React.createElement("p",null,"Twisted Brain is open-source, transparent, and community-driven.");
		var tmp2 = React.createElement("a",{ href : "https://github.com/Twisted-Brain", className : "btn btn-primary"},"Contribute on GitHub");
		return React.createElement("section",{ id : "community", className : "section"},[tmp,tmp1,tmp2]);
	}
});
var components_Features = function(props,context) {
	React.Component.call(this,props,context);
};
components_Features.__super__ = React.Component;
components_Features.prototype = $extend(React.Component.prototype,{
	render: function() {
		var tmp = React.createElement("h2",null,"Key Features");
		var tmp1 = React.createElement("img",{ src : "assets/hdevm_1.png", alt : "AI DevOps Pipeline"});
		var tmp2 = React.createElement("h3",null,"AI DevOps Pipeline");
		var tmp3 = React.createElement("p",null,"Automates repetitive coding/testing with intelligent agents.");
		var tmp4 = React.createElement("div",{ className : "feature-card"},[tmp1,tmp2,tmp3]);
		var tmp1 = React.createElement("img",{ src : "assets/xrd.png", alt : "Multi-Target Haxe Development"});
		var tmp2 = React.createElement("h3",null,"Multi-Target Haxe Development");
		var tmp3 = React.createElement("p",null,"Compile once, run everywhere (JS, C++, Java, PHP, Lua, etc.).");
		var tmp5 = React.createElement("div",{ className : "feature-card"},[tmp1,tmp2,tmp3]);
		var tmp1 = React.createElement("img",{ src : "assets/tb_3.png", alt : "Human + AI Collaboration"});
		var tmp2 = React.createElement("h3",null,"Human + AI Collaboration");
		var tmp3 = React.createElement("p",null,"AI proposes, humans refine to balance creativity and efficiency.");
		var tmp6 = React.createElement("div",{ className : "feature-card"},[tmp1,tmp2,tmp3]);
		var tmp1 = React.createElement("div",{ className : "features-grid"},[tmp4,tmp5,tmp6]);
		return React.createElement("section",{ id : "features", className : "section"},[tmp,tmp1]);
	}
});
var components_Footer = function(props,context) {
	React.Component.call(this,props,context);
};
components_Footer.__super__ = React.Component;
components_Footer.prototype = $extend(React.Component.prototype,{
	render: function() {
		var tmp = React.createElement("a",{ href : "https://github.com/Twisted-Brain"},"GitHub");
		var tmp1 = React.createElement("a",{ href : "#"},"Docs");
		var tmp2 = React.createElement("a",{ href : "#"},"Roadmap");
		var tmp3 = React.createElement("a",{ href : "#"},"Contact");
		var tmp4 = React.createElement("div",{ className : "footer-links"},[tmp,tmp1,tmp2,tmp3]);
		var tmp = React.createElement("img",{ src : "assets/logo.png", alt : "Twisted Brain Logo", className : "footer-logo"});
		var tmp1 = React.createElement("p",null,"© 2024 Twisted Brain DevOps Project");
		return React.createElement("footer",{ className : "footer"},[tmp4,tmp,tmp1]);
	}
});
var components_Hero = function(props,context) {
	React.Component.call(this,props,context);
};
components_Hero.__super__ = React.Component;
components_Hero.prototype = $extend(React.Component.prototype,{
	render: function() {
		var tmp = React.createElement("h1",null,"AI + Human: The Future of DevOps");
		var tmp1 = React.createElement("p",null,"Building, testing, and scaling with Haxe, bridging code, AI agents, and human creativity.");
		var tmp2 = React.createElement("div",null,[React.createElement("a",{ href : "#", className : "btn btn-primary"},"Get Started"),React.createElement("a",{ href : "https://github.com/Twisted-Brain", className : "btn btn-secondary"},"View on GitHub")]);
		var tmp3 = React.createElement("div",{ className : "hero-content"},[tmp,tmp1,tmp2]);
		return React.createElement("section",{ className : "hero"},[tmp3]);
	}
});
var components_Showcase = function(props,context) {
	React.Component.call(this,props,context);
};
components_Showcase.__super__ = React.Component;
components_Showcase.prototype = $extend(React.Component.prototype,{
	render: function() {
		var tmp = React.createElement("h2",null,"Showcase / Demo");
		var tmp1 = React.createElement("p",null,"// TODO: REMOVE - Add styled mockups and code cycle diagram here.");
		var tmp2 = React.createElement("img",{ src : "assets/hdevm_4.png", alt : "Showcase Image", style : { width : "80%", marginTop : "2rem"}});
		return React.createElement("section",{ id : "showcase", className : "section"},[tmp,tmp1,tmp2]);
	}
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;
App.displayName = "App";
components_About.displayName = "About";
components_Community.displayName = "Community";
components_Features.displayName = "Features";
components_Footer.displayName = "Footer";
components_Hero.displayName = "Hero";
components_Showcase.displayName = "Showcase";
Main.main();
})({});
